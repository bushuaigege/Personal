<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.1.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- 自动扫描控制层 此为Spring注解扫描 -->
	<context:component-scan base-package="com.hk.ws.controller" />

	<!--启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<ref bean="stringHttpMessageConverter" />
			<ref bean="marshallingHttpMessageConverter"/>
			<ref bean="mappingJackson2HttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 设置响应的编码 -->
	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes" value="text/plain;charset=UTF-8" />
	</bean>

		
	<bean id="marshallingHttpMessageConverter"
		class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
		<property name="marshaller" ref="castorMarshaller" />
		<property name="unmarshaller" ref="castorMarshaller" />
	</bean>
  

	<!-- 避免IE执行AJAX时,通过注解响应返回JSON出现下载文件 -->
	<bean id="mappingJackson2HttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>application/json</value>
				<value>application/xml</value>
				<value>text/plain</value>
				<value>text/xml</value>
			</list>
		</property>
	</bean>

	<!--信息转换 - 结束 -->
	<bean id="castorMarshaller" class="org.springframework.oxm.castor.CastorMarshaller"/>
	
	<!-- 使用内容协商实现多视图例 基本配置 -->
	<bean id="contentNegotiationManagerFactoryBean"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="defaultContentType" value="text/html" />
		<property name="ignoreAcceptHeader" value="true" />
		<property name="favorPathExtension" value="true" />
		<property name="favorParameter" value="false" />
		<property name="mediaTypes">
			<map>
				<entry key="atom" value="application/atom+xml" />
				<entry key="html" value="text/html" />
				<entry key="json" value="application/json" />
			</map>
		</property>
	</bean>




	<!--使用内容协商实现多视图例子 内容协商 -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="contentNegotiationManager">
			<ref bean="contentNegotiationManagerFactoryBean" />
			<!-- <bean
				class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
				<property name="defaultContentType" value="text/html" />
				<property name="mediaTypes">
					<map>
						<entry key="json" value="application/json" />
						<entry key="xml" value="application/xml" />
						<entry key="html" value="text/html" />
					</map>
				</property>
			</bean> -->
		</property>
		<property name="viewResolvers">
			<list>
				<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="prefix" value="/jsp/" />
					<property name="suffix" value=".jsp" />
				</bean>
			</list>
		</property>
	    <property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<property name="marshaller" ref="castorMarshaller" />
				</bean>
			</list>
		</property>
	</bean>



	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<!-- bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> 
		<property name="cacheSeconds" value="0" /> <property name="messageConverters"> 
		<list> json转换器 <ref bean="mappingJacksonHttpMessageConverter" /> </list> 
		</property> </bean> -->


	<!-- 配置多文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<!-- 上传文件大小限制为31M，31*1024*1024 -->
			<value>32505856</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>

	<!-- 上传的图片缓存1个月，其他js，css，img资源缓存一年 设置SpringMVC不过滤静态资源 -->
	<mvc:resources mapping="/assets/js/**" location="/assets/js/"
		cache-period="31536000" />
	<mvc:resources mapping="/assets/css/**" location="/assets/css/"
		cache-period="31536000" />
	<mvc:resources mapping="/assets/imgs/**" location="/assets/imgs/"
		cache-period="31536000" />
	<mvc:resources mapping="/assets/libs/**" location="/assets/libs/"
		cache-period="2592000" />

	<!--使用默认的Servlet来响应对静态资源文件的访问 mvc:resources 和这个 2选1 -->
	<!-- <mvc:default-servlet-handler /> -->


	<!-- 登录权限拦截器 -->
	<!-- <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			排除拦截地址
			<mvc:exclude-mapping path="/assets/**" />

			<bean class="com.jcck.ysdt.intercefilter.SecurityController">
				<property name="excludedUrls">
					<list>
						<value>/user/signIn</value>
						<value>/user/loginPage</value>
						<value>/commons/code</value>
					</list>
				</property>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors> -->

</beans>